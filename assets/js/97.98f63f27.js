(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{674:function(t,s,a){"use strict";a.r(s);var v=a(22),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"变量与常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量与常量"}},[t._v("#")]),t._v(" 变量与常量")]),t._v(" "),a("h2",{attrs:{id:"类型及函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型及函数"}},[t._v("#")]),t._v(" 类型及函数")]),t._v(" "),a("p",[t._v("Rust 每个值都有其确切的数据类型，总的来说可以分为两类：基本类型和复合类型。")]),t._v(" "),a("p",[t._v("基本类型意味着它们往往是一个最小化原子类型，无法解构为其它类型(一般意义上来说)，由以下组成：")]),t._v(" "),a("ul",[a("li",[t._v("数值类型:\n"),a("ul",[a("li",[t._v("有符号整数 (i8, i16, i32, i64, isize)")]),t._v(" "),a("li",[t._v("无符号整数 (u8, u16, u32, u64, usize)")]),t._v(" "),a("li",[t._v("浮点数 (f32, f64)")])])]),t._v(" "),a("li",[t._v("字符串：字符串字面量和字符串切片 &str")]),t._v(" "),a("li",[t._v("布尔类型： true 和 false")]),t._v(" "),a("li",[t._v("字符类型: 表示单个Unicode字符，存储为4个字节")]),t._v(" "),a("li",[t._v("单元类型: 即 () ，其唯一的值也是 ()")])]),t._v(" "),a("p",[t._v("Rust 是一门静态类型语言，也就是编译器必须在编译期知道我们所有变量的类型，但这不意味着你需要为每个变量指定类型。")]),t._v(" "),a("p",[t._v("因为Rust 编译器很聪明，它可以根据变量的值和上下文中的使用方式来自动推导出变量的类型；同时编译器也不够聪明，在某些情况下，它无法推导出变量类型，需要手动去给予一个类型标注。")]),t._v(" "),a("h3",{attrs:{id:"数值类型及运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值类型及运算符"}},[t._v("#")]),t._v(" 数值类型及运算符")]),t._v(" "),a("p",[t._v("上文简单提到过数值类型，可以分成整数和浮点数，整数又可以按照有无符号分成无符号整数和有符号整数。")]),t._v(" "),a("p",[t._v("对于整数来说：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("长度")]),t._v(" "),a("th",[t._v("有符号类型")]),t._v(" "),a("th",[t._v("无符号类型")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("8位")]),t._v(" "),a("td",[t._v("i8")]),t._v(" "),a("td",[t._v("u8")])]),t._v(" "),a("tr",[a("td",[t._v("16位")]),t._v(" "),a("td",[t._v("i16")]),t._v(" "),a("td",[t._v("u16")])]),t._v(" "),a("tr",[a("td",[t._v("32位")]),t._v(" "),a("td",[t._v("i32")]),t._v(" "),a("td",[t._v("u32")])]),t._v(" "),a("tr",[a("td",[t._v("64位")]),t._v(" "),a("td",[t._v("i64")]),t._v(" "),a("td",[t._v("u64")])]),t._v(" "),a("tr",[a("td",[t._v("128位")]),t._v(" "),a("td",[t._v("i128")]),t._v(" "),a("td",[t._v("u128")])]),t._v(" "),a("tr",[a("td",[t._v("视架构而定")]),t._v(" "),a("td",[t._v("isize")]),t._v(" "),a("td",[t._v("usize")])])])]),t._v(" "),a("p",[t._v("有符号类型规定的数字范围是 "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"2212"}})],1),a("mjx-msup",[a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"2"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"2212"}})],1),a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"1"}})],1)],1)],1)],1)],1)],1),t._v(" ~ "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-msup",[a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"2"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"2212"}})],1),a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"1"}})],1)],1)],1)],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"2212"}})],1),a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"1"}})],1)],1)],1),t._v("，其中 n 是该定义形式的位长度。")],1),t._v(" "),a("p",[t._v("无符号类型可以存储的数字范围是 0 ~ "),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[a("mjx-math",{staticClass:" MJX-TEX"},[a("mjx-msup",[a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"2"}})],1),a("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[a("mjx-TeXAtom",{attrs:{size:"s"}},[a("mjx-mi",{staticClass:"mjx-i"},[a("mjx-c",{attrs:{c:"n"}})],1),a("mjx-mo",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"2212"}})],1),a("mjx-mn",{staticClass:"mjx-n"},[a("mjx-c",{attrs:{c:"1"}})],1)],1)],1)],1)],1)],1),t._v("，其中 n 是该定义形式的位长度。")],1),t._v(" "),a("p",[t._v("其中 Rust 整型变量默认使用 i32。")]),t._v(" "),a("p",[t._v("对于浮点类型，包括 f32 和 f64，浮点数根据IEEE-754标准实现。")]),t._v(" "),a("p",[t._v("数值类型支持基本的数学运算，例如 +、-、x、/等。具体的可以查看"),a("a",{attrs:{href:"http://course.rs/appendix/operators.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rust语言圣经-附录"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=_.exports}}]);