(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{434:function(t,s,a){t.exports=a.p+"assets/img/bubble-sort.15c4e43d.gif"},435:function(t,s,a){t.exports=a.p+"assets/img/insertion-sort.367135f0.gif"},436:function(t,s,a){t.exports=a.p+"assets/img/select-sort.5bb5b213.gif"},437:function(t,s,a){t.exports=a.p+"assets/img/merge-sort.437da865.gif"},438:function(t,s,a){t.exports=a.p+"assets/img/quick-sort.d1f5250a.gif"},439:function(t,s,a){t.exports=a.p+"assets/img/bucket-sort.3a6f1e50.gif"},440:function(t,s,a){t.exports=a.p+"assets/img/counting-sort.9f4896f2.gif"},441:function(t,s,a){t.exports=a.p+"assets/img/radix-sort.5cdc0325.gif"},442:function(t,s,a){t.exports=a.p+"assets/img/summary.839422a3.png"},597:function(t,s,a){"use strict";a.r(s);var n=a(22),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"递归"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#递归"}},[t._v("#")]),t._v(" 递归")]),t._v(" "),n("p",[n("code",[t._v("递归")]),t._v(" 是一种应用非常广泛的算法（或者编程技巧）。之后我们要讲的很多数据结构和算法的编码实现都要用到递归，比如 "),n("code",[t._v("DFS 深度优先搜索")]),t._v(" 、 "),n("code",[t._v("前中后序二叉树遍历")]),t._v(" 等等。")]),t._v(" "),n("h3",{attrs:{id:"递归需要满足的三个条件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#递归需要满足的三个条件"}},[t._v("#")]),t._v(" 递归需要满足的三个条件")]),t._v(" "),n("p",[t._v("那究竟什么样的问题可以用递归来解决呢？我总结了三个条件，只要同时满足以下三个条件，就可以用递归来解决。")]),t._v(" "),n("ul",[n("li",[t._v("1、一个问题的解可以分解为几个子问题的解")]),t._v(" "),n("li",[t._v("2、这个问题与分解之后的子问题，除了数据规模不同，求解思路完全一样")]),t._v(" "),n("li",[t._v("3、存在递归终止条件")])]),t._v(" "),n("h3",{attrs:{id:"如何编写递归代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何编写递归代码"}},[t._v("#")]),t._v(" 如何编写递归代码")]),t._v(" "),n("p",[t._v("写 "),n("code",[t._v("递归")]),t._v(" 代码最关键的是 "),n("strong",[t._v("写出递推公式，找到终止条件")]),t._v("，剩下将 "),n("code",[t._v("递推公式")]),t._v(" 转化为代码就很简单了。注意，这里是两个步骤。")]),t._v(" "),n("p",[t._v("我们根据一个例子来讲解：假如这里有 "),n("code",[t._v("n")]),t._v(" 个台阶，每次你可以跨 "),n("code",[t._v("1")]),t._v(" 个台阶或者 "),n("code",[t._v("2")]),t._v(" 个台阶，请问走这 "),n("code",[t._v("n")]),t._v(" 个台阶有多少种走法？")]),t._v(" "),n("p",[t._v("我们仔细想下，实际上，可以根据"),n("code",[t._v("第一步的走法")]),t._v("把所有走法分为两类：")]),t._v(" "),n("ul",[n("li",[t._v("第一类是第一步走了 "),n("code",[t._v("1")]),t._v(" 个台阶")]),t._v(" "),n("li",[t._v("另一类是第一步走了 "),n("code",[t._v("2")]),t._v(" 个台阶")])]),t._v(" "),n("p",[t._v("所以 "),n("code",[t._v("n")]),t._v(" 个台阶的走法就等于先走 "),n("code",[t._v("1")]),t._v(" 阶后，"),n("code",[t._v("n - 1")]),t._v(" 个台阶的走法加上先走 "),n("code",[t._v("2")]),t._v(" 阶后，"),n("code",[t._v("n - 2")]),t._v(" 个台阶的走法。")]),t._v(" "),n("p",[t._v("用公式表示就是："),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"f"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"f"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mn",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"+"}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"f"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mn",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 。有了"),n("strong",[t._v("递推公式")]),t._v("，递归代码基本上就完成了一半。")],1),t._v(" "),n("p",[t._v("我们再来看下终止条件：当有一个台阶时， 我们不需要再继续递归，就只有一种走法。所以 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"f"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mn",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"1"}})],1)],1)],1),t._v(" 。又因为每次可以走 2 个台阶，所以 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"f"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"2"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mn",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("p",[t._v("我们把递归 终止条件 和刚刚得到的 递推公式 放到一起就是这样的：")]),t._v(" "),n("p",[n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"f"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mn",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"1"}})],1)],1)],1)],1),t._v(" "),n("p",[n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"f"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"2"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mn",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1)],1),t._v(" "),n("p",[n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"f"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"f"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mn",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"+"}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"f"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mn",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1)],1),t._v(" "),n("p",[t._v("有了这个公式，我们转化成递归代码就简单多了。最终的递归代码是这样的：")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[t._v("总结一下，"),n("strong",[t._v("写递归代码的关键就是找到如何将大问题 "),n("code",[t._v("分解")]),t._v(" 为小问题的规律，并且基于此写出 "),n("code",[t._v("递推公式")]),t._v(" ，然后再推敲 "),n("code",[t._v("终止条件")]),t._v(" ，最后将 "),n("code",[t._v("递推公式")]),t._v(" 和 "),n("code",[t._v("终止条件")]),t._v(" 翻译成代码")]),t._v("。")]),t._v(" "),n("p",[t._v("另外编写递归代码的关键是："),n("strong",[t._v("只要遇到递归，我们就把它抽象成一个递推公式，不用想一层层的调用关系，不要试图用人脑去分解递归的每个步骤")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"递归代码要警惕堆栈溢出"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#递归代码要警惕堆栈溢出"}},[t._v("#")]),t._v(" 递归代码要警惕堆栈溢出")]),t._v(" "),n("p",[n("code",[t._v("函数调用")]),t._v(" 会使用 "),n("code",[t._v("栈")]),t._v(" 来保存临时变量。每调用一个函数，都会将临时变量封装为栈帧 "),n("code",[t._v("压入")]),t._v(" 内存栈，等函数执行完成返回时，才出栈。")]),t._v(" "),n("p",[t._v("系统栈或者虚拟机栈空间一般都不大。如果递归求解的数据 "),n("code",[t._v("规模很大")]),t._v(" ，调用层次很深，一直压入栈，就会有 "),n("code",[t._v("堆栈溢出")]),t._v(" 的风险。")]),t._v(" "),n("p",[t._v("遇到这种情况可以使用 "),n("code",[t._v("尾递归")]),t._v(" 优化。")]),t._v(" "),n("p",[n("code",[t._v("尾递归")]),t._v(" 优化主要是对 "),n("code",[t._v("栈内存空间")]),t._v(" 的优化, 这个优化是 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 到 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 的；至于 "),n("code",[t._v("时间")]),t._v(" 的优化，其实是由于对空间的优化导致内存分配的工作减少所产生的，是一个常数优化，不会带来质的变化。")],1),t._v(" "),n("p",[t._v("我们将上面的例子的代码改成 "),n("code",[t._v("尾递归")]),t._v(" 形式：")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ret1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ret2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 递到底了")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ret1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ret2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ret1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" ret2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br")])]),n("h3",{attrs:{id:"递归代码要警惕重复计算"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#递归代码要警惕重复计算"}},[t._v("#")]),t._v(" 递归代码要警惕重复计算")]),t._v(" "),n("p",[t._v("除此之外，使用 "),n("code",[t._v("递归")]),t._v(" 时还会出现 "),n("code",[t._v("重复计算")]),t._v(" 的问题。")]),t._v(" "),n("p",[t._v("为了避免重复计算，我们可以通过一个 "),n("code",[t._v("数据结构")]),t._v(" （比如散列表）来保存已经 "),n("code",[t._v("求解过")]),t._v(" 的 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"f"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"k"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 。")],1),t._v(" "),n("p",[t._v("当递归调用到 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"f"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"k"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 时，先看下是否已经求解过了。")],1),t._v(" "),n("p",[t._v("如果是，则直接从 "),n("code",[t._v("散列表")]),t._v(" 中取值返回，不需要重复计算，这样就能避免刚讲的问题了。")]),t._v(" "),n("p",[t._v("按照上面的思路，我们来改造一下刚才的代码：")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hasSolvedList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" hasSovledList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" ret "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  hasSovledList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ret"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ret"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br")])]),n("h3",{attrs:{id:"将递归代码改写为非递归代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#将递归代码改写为非递归代码"}},[t._v("#")]),t._v(" 将递归代码改写为非递归代码")]),t._v(" "),n("p",[n("code",[t._v("递归")]),t._v(" 有利有弊，利是递归代码的表达力很强，写起来非常 "),n("code",[t._v("简洁")]),t._v(" ；而弊就是 "),n("code",[t._v("空间复杂度")]),t._v(" 高、有 "),n("code",[t._v("堆栈溢出")]),t._v(" 的风险、存在 "),n("code",[t._v("重复计算")]),t._v(" 、过多的函数调用会 "),n("code",[t._v("耗时较多")]),t._v(" 等问题。")]),t._v(" "),n("p",[t._v("我们可以将上面的例子用非递归的方式实现：")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" ret "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pre "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" prepre "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ret "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pre "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" prepre"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    prepre "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pre"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    pre "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ret"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ret"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br")])]),n("p",[t._v("因为递归本身就是借助 "),n("code",[t._v("栈")]),t._v(" 来实现的，只不过我们使用的 "),n("code",[t._v("栈")]),t._v(" 是 "),n("code",[t._v("系统或者虚拟机")]),t._v(" 本身提供的，我们没有感知罢了。")]),t._v(" "),n("p",[t._v("如果我们自己在内存堆上实现 "),n("code",[t._v("栈")]),t._v(" ，手动模拟 "),n("code",[t._v("入栈")]),t._v(" 、 "),n("code",[t._v("出栈")]),t._v(" 过程，这样任何递归代码都可以改写成看上去不是递归代码的样子。")]),t._v(" "),n("p",[t._v("但是这种思路实际上是将递归改为了 "),n("code",[t._v("手动")]),t._v(" 递归，本质并没有变，而且也并没有解决前面讲到的某些问题，徒增了实现的复杂度。")]),t._v(" "),n("h2",{attrs:{id:"排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[t._v("#")]),t._v(" 排序")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("排序算法")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("时间复杂度")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("是否基于比较")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("冒泡、插入、选择")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1)],1),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("✔️")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("归并、快排")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"o"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"g"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1)],1),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("✔️")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("桶、计数、基数")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1)],1),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("❌")])])])]),t._v(" "),n("h3",{attrs:{id:"如何分析一个排序算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何分析一个排序算法"}},[t._v("#")]),t._v(" 如何分析一个排序算法")]),t._v(" "),n("h4",{attrs:{id:"_1、排序算法的执行效率"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、排序算法的执行效率"}},[t._v("#")]),t._v(" 1、排序算法的执行效率")]),t._v(" "),n("ul",[n("li",[t._v("最好情况、最坏情况、平均情况 "),n("code",[t._v("时间复杂度")])]),t._v(" "),n("li",[n("code",[t._v("时间复杂度")]),t._v(" 的系数、常数 、低阶")]),t._v(" "),n("li",[t._v("比较次数和交换（或移动）次数")])]),t._v(" "),n("h4",{attrs:{id:"_2、排序算法的内存消耗"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、排序算法的内存消耗"}},[t._v("#")]),t._v(" 2、排序算法的内存消耗")]),t._v(" "),n("p",[t._v("算法的内存消耗可以通过 "),n("code",[t._v("空间复杂度")]),t._v(" 来衡量，排序算法也不例外。 "),n("code",[t._v("原地排序算法")]),t._v(" ，就是特指 "),n("code",[t._v("空间复杂度")]),t._v(" 是 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 的排序算法。")],1),t._v(" "),n("h4",{attrs:{id:"_3、排序算法的稳定性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、排序算法的稳定性"}},[t._v("#")]),t._v(" 3、排序算法的稳定性")]),t._v(" "),n("p",[t._v("针对排序算法，我们还有一个重要的度量指标，"),n("strong",[t._v("稳定性")]),t._v("。这个概念是说，如果待排序的序列中存在值相等的元素，经过排序之后，"),n("strong",[t._v("相等元素之间原有的先后顺序不变")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"冒泡排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#冒泡排序"}},[t._v("#")]),t._v(" 冒泡排序")]),t._v(" "),n("p",[t._v("冒泡排序只会操作 "),n("code",[t._v("相邻")]),t._v(" 的两个数据。每次冒泡操作都会对相邻的两个元素进行比较，看是否满足大小关系要求。如果不满足就让它俩 "),n("code",[t._v("互换")]),t._v(" 。\n"),n("img",{attrs:{src:a(434),alt:"bubble-sort"}}),t._v("\n当某次冒泡操作已经没有数据交换时，说明已经达到 完全有序，不用再继续执行后续的冒泡操作。\n实现冒泡排序：")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bubbleSort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" len "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("len "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" flag "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标志位，用于提前结束冒泡")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        flag "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("flag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这层遍历中未发生元素交换，冒泡结束")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br")])]),n("h4",{attrs:{id:"冒泡排序性能分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#冒泡排序性能分析"}},[t._v("#")]),t._v(" 冒泡排序性能分析")]),t._v(" "),n("p",[t._v("冒泡的过程只涉及相邻数据的交换操作，只需要常量级的临时空间，所以它的 "),n("code",[t._v("空间复杂度")]),t._v(" 为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" ，是一个 "),n("code",[t._v("原地排序")]),t._v(" 算法。")],1),t._v(" "),n("p",[t._v("在冒泡排序中，只有交换才可以改变两个元素的前后顺序。为了保证冒泡排序算法的稳定性，当有相邻的两个元素 "),n("code",[t._v("大小相等")]),t._v(" 的时候，我们 "),n("code",[t._v("不做交换")]),t._v(" ，相同大小的数据在排序前后不会改变顺序，所以冒泡排序是稳定的排序算法。")]),t._v(" "),n("p",[t._v("最好情况下，要排序的数据已经是有序的了，所以 "),n("code",[t._v("最好情况时间复杂度")]),t._v(" 是 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 。")],1),t._v(" "),n("p",[t._v("而最坏的情况是，要排序的数据刚好是 "),n("code",[t._v("倒序排列")]),t._v(" 的，我们需要进行 "),n("code",[t._v("n")]),t._v(" 次冒泡操作，所以 "),n("code",[t._v("最坏情况时间复杂度")]),t._v(" 为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 。")],1),t._v(" "),n("p",[t._v("至于 "),n("code",[t._v("平均情况时间复杂度")]),t._v(" ，我们这里通过 "),n("code",[t._v("有序度")]),t._v(" 和 "),n("code",[t._v("逆序度")]),t._v(" 两个概念来进行 "),n("code",[t._v("不严格")]),t._v(" 分析。")]),t._v(" "),n("p",[n("strong",[t._v("有序度")]),t._v(" 是数组中具有 "),n("code",[t._v("有序关系")]),t._v(" 的元素对的个数。我们把这种 "),n("code",[t._v("完全有序")]),t._v(" 的数组的 "),n("code",[t._v("有序度")]),t._v(" 叫作"),n("strong",[t._v("满有序度")]),t._v("。满有序度的计算公式如下：")]),t._v(" "),n("p"),n("p",[n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML",display:"true"}},[n("mjx-math",{staticClass:" MJX-TEX",attrs:{display:"true"}},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("满")]),n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("有")]),n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("序")]),n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("度")]),n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2217"}})],1),n("mjx-mfrac",{attrs:{space:"3"}},[n("mjx-frac",{attrs:{type:"d"}},[n("mjx-num",[n("mjx-nstrut",{attrs:{type:"d"}}),n("mjx-mrow",[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mn",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),n("mjx-dbox",[n("mjx-dtable",[n("mjx-line",{attrs:{type:"d"}}),n("mjx-row",[n("mjx-den",[n("mjx-dstrut",{attrs:{type:"d"}}),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1)],1)],1)],1)],1)],1)],1)],1),n("p"),t._v(" "),n("p",[n("strong",[t._v("逆序度")]),t._v(" 的定义正好跟 "),n("strong",[t._v("有序度")]),t._v(" 相反。关于这三个概念，我们还可以得到一个公式： "),n("strong",[t._v("逆序度 = 满有序度 - 有序度")]),t._v(" 。那么根据这个公式套上 "),n("strong",[t._v("满有序度")]),t._v(" 公式我们可以得到：")]),t._v(" "),n("p"),n("p",[n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML",display:"true"}},[n("mjx-math",{staticClass:" MJX-TEX",attrs:{display:"true"}},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("逆")]),n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("序")]),n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("度")]),n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2217"}})],1),n("mjx-mfrac",{attrs:{space:"3"}},[n("mjx-frac",{attrs:{type:"d"}},[n("mjx-num",[n("mjx-nstrut",{attrs:{type:"d"}}),n("mjx-mrow",[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mn",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),n("mjx-dbox",[n("mjx-dtable",[n("mjx-line",{attrs:{type:"d"}}),n("mjx-row",[n("mjx-den",[n("mjx-dstrut",{attrs:{type:"d"}}),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1)],1)],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("有")]),n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("序")]),n("mjx-utext",{staticStyle:{"font-family":"serif"},attrs:{variant:"normal"}},[t._v("度")])],1)],1)],1)],1),n("p"),t._v(" "),n("p",[n("code",[t._v("冒泡排序")]),t._v(" 包含两个操作原子， "),n("code",[t._v("比较")]),t._v(" 和 "),n("code",[t._v("交换")]),t._v(" 。每交换一次， "),n("code",[t._v("有序度")]),t._v(" 就加 "),n("code",[t._v("1")]),t._v(" 。")]),t._v(" "),n("p",[t._v("最坏情况下，初始状态的 "),n("code",[t._v("有序度")]),t._v(" 是 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"0"}})],1)],1)],1),t._v(" ，所以要进行 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2217"}})],1),n("mjx-mfrac",{attrs:{space:"3"}},[n("mjx-frac",[n("mjx-num",[n("mjx-nstrut"),n("mjx-mrow",{attrs:{size:"s"}},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),n("mjx-dbox",[n("mjx-dtable",[n("mjx-line"),n("mjx-row",[n("mjx-den",[n("mjx-dstrut"),n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1)],1)],1)],1)],1)],1)],1),t._v(" 次交换。")],1),t._v(" "),n("p",[t._v("最好情况下，初始状态的 "),n("code",[t._v("有序度")]),t._v(" 是 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2217"}})],1),n("mjx-mfrac",{attrs:{space:"3"}},[n("mjx-frac",[n("mjx-num",[n("mjx-nstrut"),n("mjx-mrow",{attrs:{size:"s"}},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),n("mjx-dbox",[n("mjx-dtable",[n("mjx-line"),n("mjx-row",[n("mjx-den",[n("mjx-dstrut"),n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1)],1)],1)],1)],1)],1)],1),t._v(" ，就不需要进行交换。")],1),t._v(" "),n("p",[t._v("我们可以取个中间值 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2217"}})],1),n("mjx-mfrac",{attrs:{space:"3"}},[n("mjx-frac",[n("mjx-num",[n("mjx-nstrut"),n("mjx-mrow",{attrs:{size:"s"}},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),n("mjx-dbox",[n("mjx-dtable",[n("mjx-line"),n("mjx-row",[n("mjx-den",[n("mjx-dstrut"),n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"4"}})],1)],1)],1)],1)],1)],1)],1)],1)],1),t._v(" ，来表示 "),n("code",[t._v("初始有序度")]),t._v(" 既不是很高也不是很低的平均情况。")],1),t._v(" "),n("p",[t._v("换句话说，平均情况下，需要 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2217"}})],1),n("mjx-mfrac",{attrs:{space:"3"}},[n("mjx-frac",[n("mjx-num",[n("mjx-nstrut"),n("mjx-mrow",{attrs:{size:"s"}},[n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"2212"}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),n("mjx-dbox",[n("mjx-dtable",[n("mjx-line"),n("mjx-row",[n("mjx-den",[n("mjx-dstrut"),n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"4"}})],1)],1)],1)],1)],1)],1)],1)],1)],1),t._v(" 次交换操作，比较操作肯定要比交换操作多，而复杂度的上限是 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("，所以 "),n("code",[t._v("平均情况时间复杂度")]),t._v(" 就是 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("h3",{attrs:{id:"插入排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#插入排序"}},[t._v("#")]),t._v(" 插入排序")]),t._v(" "),n("p",[n("code",[t._v("插入排序")]),t._v(" 借助的 "),n("code",[t._v("核心思想")]),t._v(" 是，往一个有序数组插入数据，并保持数组依旧有序。在插入之前，我们只要遍历数组，找到数据应该插入的位置将其插入即可。")]),t._v(" "),n("p",[t._v("在插入排序中，我们将数组中的数据分为两个区间， "),n("strong",[t._v("已排序区间")]),t._v(" 和 "),n("strong",[t._v("未排序区间")]),t._v(" 。\n"),n("img",{attrs:{src:a(435),alt:"insertion-sort"}}),t._v("\n初始 "),n("code",[t._v("已排序区间")]),t._v(" 只有一个元素，就是数组的第一个元素。插入算法的核心思想是取 "),n("code",[t._v("未排序区间")]),t._v(" 中的 "),n("code",[t._v("元素")]),t._v(" ，在 "),n("code",[t._v("已排序区间")]),t._v(" 中找到合适的插入位置将其 "),n("code",[t._v("插入")]),t._v(" ，并保证 "),n("code",[t._v("已排序区间")]),t._v(" 数据一直有序。")]),t._v(" "),n("p",[n("code",[t._v("插入排序")]),t._v(" 也包含两种操作，一种是 "),n("strong",[t._v("元素的比较")]),t._v(" ，一种是 "),n("strong",[t._v("元素的移动")]),t._v(" 。")]),t._v(" "),n("p",[t._v("对于一个给定的初始序列，移动操作的次数总是 "),n("code",[t._v("固定")]),t._v(" 的，就等于 "),n("strong",[t._v("逆序度")]),t._v(" 。")]),t._v(" "),n("p",[t._v("实现插入排序：")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertionSort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" len "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("len "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" item "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br")])]),n("h4",{attrs:{id:"插入排序性能分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#插入排序性能分析"}},[t._v("#")]),t._v(" 插入排序性能分析")]),t._v(" "),n("p",[n("code",[t._v("插入排序")]),t._v(" 算法的运行并不需要额外的存储空间，所以 "),n("code",[t._v("空间复杂度")]),t._v(" 是 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" ，也就是说，这是一个 "),n("code",[t._v("原地排序")]),t._v(" 算法。")],1),t._v(" "),n("p",[n("code",[t._v("插入排序")]),t._v(" 是 "),n("code",[t._v("稳定")]),t._v(" 的排序算法。")]),t._v(" "),n("p",[n("code",[t._v("最好情况时间复杂度")]),t._v(" 为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("p",[n("code",[t._v("最坏情况时间复杂度")]),t._v(" 为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 。")],1),t._v(" "),n("p",[t._v("在数组中插入一个数据的 "),n("code",[t._v("平均时间复杂度")]),t._v(" 是 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 。对于 "),n("code",[t._v("插入排序")]),t._v(" 来说，每次插入操作都相当于在数组中插入一个数据，循环执行 "),n("code",[t._v("n")]),t._v(" 次 "),n("code",[t._v("插入")]),t._v(" 操作，所以 "),n("code",[t._v("平均情况时间复杂度")]),t._v(" 为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("h3",{attrs:{id:"选择排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#选择排序"}},[t._v("#")]),t._v(" 选择排序")]),t._v(" "),n("p",[n("code",[t._v("选择排序")]),t._v(" 算法的实现思路有点类似 "),n("code",[t._v("插入排序")]),t._v(" ，也分 "),n("code",[t._v("已排序区间")]),t._v(" 和 "),n("code",[t._v("未排序区间")]),t._v(" 。但是 "),n("code",[t._v("选择排序")]),t._v(" 每次会从 "),n("code",[t._v("未排序区间")]),t._v(" 中找到 "),n("code",[t._v("最小")]),t._v(" 的元素，将其放到 "),n("code",[t._v("已排序区间")]),t._v(" 的 "),n("code",[t._v("末尾")]),t._v(" 。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(436),alt:"insertion-sort"}})]),t._v(" "),n("p",[t._v("实现选择排序：")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectSort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" len "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("len "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" min "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" minIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("min "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        min "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        minIndex "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("minIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("minIndex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br")])]),n("h4",{attrs:{id:"选择排序性能分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#选择排序性能分析"}},[t._v("#")]),t._v(" 选择排序性能分析")]),t._v(" "),n("p",[n("code",[t._v("选择排序空间复杂度")]),t._v(" 为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("，是一种 "),n("code",[t._v("原地排序")]),t._v(" 算法。")],1),t._v(" "),n("p",[n("code",[t._v("选择排序")]),t._v(" 的 "),n("code",[t._v("最好情况时间复杂度")]),t._v(" 、 "),n("code",[t._v("最坏情况时间复杂度")]),t._v(" 和 "),n("code",[t._v("平均情况时间复杂度")]),t._v(" 都为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("p",[n("code",[t._v("选择排序")]),t._v(" 是 "),n("code",[t._v("不稳定")]),t._v(" 的排序算法。")]),t._v(" "),n("h3",{attrs:{id:"归并排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#归并排序"}},[t._v("#")]),t._v(" 归并排序")]),t._v(" "),n("p",[t._v("我们先来看 "),n("strong",[t._v("归并排序（Merge Sort）")]),t._v("。")]),t._v(" "),n("p",[n("code",[t._v("归并排序")]),t._v(" 的核心思想还是蛮简单的：如果要排序一个数组，我们先把数组从中间分成 "),n("code",[t._v("前后两部分")]),t._v(" ，然后对前后两部分 "),n("code",[t._v("分别排序")]),t._v(" ，再将排好序的两部分 "),n("code",[t._v("合并")]),t._v(" 在一起，这样整个数组就都有序了。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(437),alt:"merge-sort"}})]),t._v(" "),n("p",[n("code",[t._v("归并排序")]),t._v(" 使用的就是 "),n("strong",[t._v("分治思想")]),t._v(" 。 "),n("code",[t._v("分治")]),t._v(" ，顾名思义，就是 "),n("code",[t._v("分而治之")]),t._v(" ，将一个大问题分解成小的子问题来解决。")]),t._v(" "),n("p",[t._v("虽然在理解上 "),n("code",[t._v("分治")]),t._v(" 和 "),n("code",[t._v("递归")]),t._v(" 很像，并且 "),n("code",[t._v("分治")]),t._v(" 算法一般都是用 "),n("code",[t._v("递归")]),t._v(" 来实现的。"),n("strong",[t._v("但分治是一种解决问题的处理思想，递归是一种编程技巧")]),t._v("，这两者并不冲突。")]),t._v(" "),n("p",[t._v("前面章节我们说过，写 "),n("code",[t._v("递归")]),t._v(" 代码的技巧就是，分析得出 "),n("code",[t._v("递推公式")]),t._v(" ，然后找到 "),n("code",[t._v("终止条件")]),t._v(" ，最后将 "),n("code",[t._v("递推公式")]),t._v(" 翻译成 "),n("code",[t._v("递归代码")]),t._v(" 。")]),t._v(" "),n("p",[t._v("归并排序的递推公式和终止条件如下：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 递推公式\nmergeSort(p, r) = merge(mergeSort(p, q), mergeSort(q + 1, r));\n// 终止条件\np >= r\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("p",[t._v("根据如上的递推公式和终止条件，我们写出归并排序的代码：")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeSort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeSortInternally")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeSortInternally")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" q "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeSortInternally")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeSortInternally")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeArr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mergeArr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" q "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" k "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" temp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需借助临时数组")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" q "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      temp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      temp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      temp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      temp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" r "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" temp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 排序完成后将其赋值给原数组")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br")])]),n("h4",{attrs:{id:"归并排序的性能分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#归并排序的性能分析"}},[t._v("#")]),t._v(" 归并排序的性能分析")]),t._v(" "),n("p",[n("code",[t._v("归并排序")]),t._v(" 是一个 "),n("code",[t._v("稳定")]),t._v(" 的排序算法。")]),t._v(" "),n("p",[n("code",[t._v("归并排序")]),t._v(" 的执行效率与要排序的原始数组的有序程度无关，所以其时间复杂度是非常稳定的，不管是 "),n("code",[t._v("最好情况")]),t._v(" 、 "),n("code",[t._v("最坏情况")]),t._v(" ，还是 "),n("code",[t._v("平均情况")]),t._v(" ， "),n("code",[t._v("时间复杂度")]),t._v(" 都是 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"o"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"g"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("p",[t._v("递归代码的空间复杂度并不能像时间复杂度那样累加。")]),t._v(" "),n("p",[t._v("刚刚我们忘记了最重要的一点，那就是，尽管每次合并操作都需要申请额外的内存空间，但在合并完成之后， "),n("code",[t._v("临时开辟")]),t._v(" 的内存空间就被释放掉了。")]),t._v(" "),n("p",[t._v("在 "),n("code",[t._v("任意时刻")]),t._v(" ，CPU 只会有 "),n("code",[t._v("一个函数")]),t._v(" 在执行，也就只会有一个 "),n("code",[t._v("临时")]),t._v(" 的内存空间在使用。")]),t._v(" "),n("p",[t._v("临时内存空间最大也不会超过 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1)],1)],1),t._v(" 个数据的大小，所以 "),n("code",[t._v("空间复杂度")]),t._v(" 是 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("h3",{attrs:{id:"快速排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#快速排序"}},[t._v("#")]),t._v(" 快速排序")]),t._v(" "),n("p",[t._v("快排 利用的也是 分治思想 。乍看起来，它有点像 归并排序 ，但是思路其实完全不一样。")]),t._v(" "),n("p",[t._v("快排的思想是这样的：如果要排序数组中下标从 p 到 r 之间的一组数据，我们选择 p 到 r 之间的任意一个数据作为 pivot（分区点）。")]),t._v(" "),n("p",[t._v("我们遍历 p 到 r 之间的数据，将小于 pivot 的放到左边，将大于 pivot 的放到右边，将 pivot 放到中间。")]),t._v(" "),n("p",[t._v("经过这一步骤之后，数组 p 到 r 之间的数据就被分成了三个部分，前面 p 到 q - 1 之间都是小于 pivot 的，中间是 pivot，后面的 q + 1 到 r 之间是大于 pivot 的。")]),t._v(" "),n("p",[t._v("根据 分治 、 递归 的处理思想，我们可以用递归排序下标从 p 到 q - 1 之间的数据和下标从 q + 1 到 r 之间的数据，直到区间缩小为 1，就说明所有的数据都有序了。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(438),alt:"quick-sort"}})]),t._v(" "),n("p",[t._v("如果我们用递推公式来将上面的过程写出来的话，就是这样：")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 递推公式\nquickSor(p, r) = quickSor(p, q - 1) + quickSor(q + 1, r);\n// 终止条件\np >= r\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("p",[t._v("我们根据递推公式和终止条件，写出 快速排序 的代码：")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("quickSort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("quickSortInternally")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("quickSortInternally")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pivot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("partition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("quickSortInternally")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pivot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("quickSortInternally")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pivot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("partition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" r")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pivot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" pivot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将分区点放到正确的位置")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br")])]),n("p",[n("code",[t._v("归并排序")]),t._v(" 中有一个 "),n("code",[t._v("merge")]),t._v(" 合并函数，我们这里有一个 "),n("code",[t._v("partition")]),t._v(" 分区函数。")]),t._v(" "),n("p",[n("code",[t._v("partition")]),t._v(" 分区函数的逻辑就是随机选择一个元素作为 "),n("code",[t._v("pivot")]),t._v(" （一般情况下，可 以选择 p 到 r 区间的最后一个元素），然后对 "),n("code",[t._v("arr[p，r]")]),t._v(" 分区，函数返回 "),n("code",[t._v("pivot")]),t._v(" 的下标。")]),t._v(" "),n("p",[n("code",[t._v("快排")]),t._v(" 和 "),n("code",[t._v("归并")]),t._v(" 用的都是"),n("strong",[t._v("分治思想")]),t._v("，递推公式和递归代码也非常相似，那它们的区别在哪里呢？")]),t._v(" "),n("p",[n("code",[t._v("归并排序")]),t._v(" 的处理过程是 "),n("strong",[t._v("由下到上")]),t._v(" 的，先处理子问题，然后再 "),n("code",[t._v("合并")]),t._v(" 。而 "),n("code",[t._v("快排")]),t._v(" 正好相反，它的处理过程是 "),n("strong",[t._v("由上到下")]),t._v(" 的，先分区，然后再处理子问题。")]),t._v(" "),n("h4",{attrs:{id:"快速排序的性能分析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#快速排序的性能分析"}},[t._v("#")]),t._v(" 快速排序的性能分析")]),t._v(" "),n("p",[n("code",[t._v("快速排序")]),t._v(" 是一个 "),n("code",[t._v("不稳定")]),t._v(" 的排序算法。")]),t._v(" "),n("p",[n("code",[t._v("快速排序空间复杂度")]),t._v(" 为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mn",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"1"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("，是一种 "),n("code",[t._v("原地排序")]),t._v(" 算法。")],1),t._v(" "),n("p",[n("code",[t._v("选择排序")]),t._v(" 的 "),n("code",[t._v("最好情况时间复杂度")]),t._v(" 为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"o"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"g"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("p",[n("code",[t._v("选择排序")]),t._v(" 的 "),n("code",[t._v("最坏情况时间复杂度")]),t._v(" 为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("p",[n("code",[t._v("选择排序")]),t._v(" 的 "),n("code",[t._v("平均情况时间复杂度")]),t._v(" 为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"o"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"g"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("h3",{attrs:{id:"桶排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#桶排序"}},[t._v("#")]),t._v(" 桶排序")]),t._v(" "),n("p",[n("code",[t._v("桶排序")]),t._v(" ，顾名思义，会用到"),n("strong",[t._v("桶")]),t._v("，核心思想是将要排序的数据分到几个 "),n("code",[t._v("有序")]),t._v(" 的桶里，每个桶里的数据再 "),n("code",[t._v("单独排序")]),t._v(" 。\n"),n("img",{attrs:{src:a(439),alt:"bucket-sort"}})]),t._v(" "),n("p",[n("code",[t._v("桶排序")]),t._v(" 的 "),n("code",[t._v("时间复杂度")]),t._v(" 为什么是 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 呢？我们一块儿来分析一下。")],1),t._v(" "),n("p",[t._v("如果要排序的数据有 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1)],1)],1),t._v(" 个，我们把它们均匀地划分到 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"m"}})],1)],1)],1),t._v(" 个桶内，每个桶里就有 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"k"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mfrac",{attrs:{space:"4"}},[n("mjx-frac",[n("mjx-num",[n("mjx-nstrut"),n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"n"}})],1)],1),n("mjx-dbox",[n("mjx-dtable",[n("mjx-line"),n("mjx-row",[n("mjx-den",[n("mjx-dstrut"),n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"m"}})],1)],1)],1)],1)],1)],1)],1)],1)],1),t._v(" 个元素。")],1),t._v(" "),n("p",[t._v("每个桶内部使用 "),n("code",[t._v("快速排序")]),t._v(" ， "),n("code",[t._v("时间复杂度")]),t._v(" 为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"k"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2217"}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"o"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"g"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"k"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 。"),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"m"}})],1)],1)],1),t._v(" 个 "),n("code",[t._v("桶排序")]),t._v(" 的 "),n("code",[t._v("时间复杂度")]),t._v(" 就是 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"m"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2217"}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"k"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2217"}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"o"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"g"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"k"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("，因为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"k"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"4"}},[n("mjx-c",{attrs:{c:"="}})],1),n("mjx-mfrac",{attrs:{space:"4"}},[n("mjx-frac",[n("mjx-num",[n("mjx-nstrut"),n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"n"}})],1)],1),n("mjx-dbox",[n("mjx-dtable",[n("mjx-line"),n("mjx-row",[n("mjx-den",[n("mjx-dstrut"),n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"m"}})],1)],1)],1)],1)],1)],1)],1)],1)],1),t._v("，所以整个 "),n("code",[t._v("桶排序")]),t._v(" 的 "),n("code",[t._v("时间复杂度")]),t._v(" 就是 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2217"}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"o"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"g"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mfrac",[n("mjx-frac",[n("mjx-num",[n("mjx-nstrut"),n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"n"}})],1)],1),n("mjx-dbox",[n("mjx-dtable",[n("mjx-line"),n("mjx-row",[n("mjx-den",[n("mjx-dstrut"),n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"m"}})],1)],1)],1)],1)],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("p",[t._v("当桶的个数 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"m"}})],1)],1)],1),t._v(" 接近数据个数 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1)],1)],1),t._v(" 时，"),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"l"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"o"}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"g"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mfrac",[n("mjx-frac",[n("mjx-num",[n("mjx-nstrut"),n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"n"}})],1)],1),n("mjx-dbox",[n("mjx-dtable",[n("mjx-line"),n("mjx-row",[n("mjx-den",[n("mjx-dstrut"),n("mjx-mi",{staticClass:"mjx-i",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"m"}})],1)],1)],1)],1)],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 就是一个非常小的常量，这个时候 "),n("code",[t._v("桶排序")]),t._v(" 的 "),n("code",[t._v("时间复杂度")]),t._v(" 接近 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("p",[t._v("实际上， "),n("code",[t._v("桶排序")]),t._v(" 对要 "),n("code",[t._v("排序数据")]),t._v(" 的要求是非常 "),n("code",[t._v("苛刻")]),t._v(" 的。所以 "),n("code",[t._v("桶排序")]),t._v(" 的应用没有想象中的那么广泛。")]),t._v(" "),n("p",[n("strong",[t._v("桶排序比较适合用在外部排序中")]),t._v("。所谓的外部排序就是数据存储在外部磁盘中，数据量比较 大，内存有限，无法将数据全部加载到内存中。")]),t._v(" "),n("h3",{attrs:{id:"计数排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#计数排序"}},[t._v("#")]),t._v(" 计数排序")]),t._v(" "),n("p",[t._v("个人觉得，"),n("strong",[t._v("计数排序其实是桶排序的一种特殊情况")]),t._v("。")]),t._v(" "),n("p",[t._v("当要排序的 "),n("code",[t._v("n")]),t._v(" 个数据，所处的范围并不大的时候，比如最大值是 "),n("code",[t._v("k")]),t._v(" ，我们就可以把数据划分成 "),n("code",[t._v("k")]),t._v(" 个桶。每个桶内的数据值都是相同的，"),n("strong",[t._v("省掉了桶内排序的时间")]),t._v("。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(440),alt:"counting-sort"}})]),t._v(" "),n("p",[t._v("当我们统计完每一位对应有几个元素后，怎么还原排序后的数组呢？")]),t._v(" "),n("p",[t._v("这里我们可以现在 "),n("code",[t._v("计数数组")]),t._v(" 中 "),n("code",[t._v("从前向后")]),t._v(" 依次 "),n("code",[t._v("累加")]),t._v(" 当前数对应的个数。")]),t._v(" "),n("p",[t._v("然后 "),n("code",[t._v("从后向前")]),t._v(" 依次遍历 "),n("code",[t._v("原数组")]),t._v(" ，根据 "),n("code",[t._v("计数数组")]),t._v(" 中的累计数来确定当前遍历元素在排序数组中的位置，并且在确定后，计数数组对应的元素累加数相应减一。")]),t._v(" "),n("p",[t._v("我们实现 "),n("code",[t._v("计数排序")]),t._v(" 的代码：")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("countingSort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" len "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("len "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" max "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" max "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" counting "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    counting"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从前向后依次累加")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" max"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    counting"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" counting"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" temp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从后向前遍历原数组")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" len "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" index "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" counting"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    temp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    counting"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" temp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br")])]),n("p",[n("code",[t._v("计数排序")]),t._v(" 只能用在 "),n("code",[t._v("数据范围不大")]),t._v(" 的场景中，如果数据范围 "),n("code",[t._v("k")]),t._v(" 比要排序的数据 "),n("code",[t._v("n")]),t._v(" 大很多，就不适合用 "),n("code",[t._v("计数排序")]),t._v(" 了。")]),t._v(" "),n("p",[t._v("而且， "),n("code",[t._v("计数排序")]),t._v(" 只能给 "),n("code",[t._v("非负整数")]),t._v(" 排序，如果要排序的数据是其他类型的，要将其在不改变相对大小的情况下，"),n("strong",[t._v("转化为非负整数")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"基数排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基数排序"}},[t._v("#")]),t._v(" 基数排序")]),t._v(" "),n("p",[t._v("假设我们有 10 万个 "),n("code",[t._v("手机号码")]),t._v(" ，希望将这 10 万个 "),n("code",[t._v("手机号码")]),t._v(" 从小到大排序，你有什么比较快速的排序方法呢？")]),t._v(" "),n("p",[t._v("可以使用 "),n("code",[t._v("基数排序")]),t._v(" 。借助 "),n("code",[t._v("稳定")]),t._v(" 排序算法，这里有一个巧妙的实现思路。")]),t._v(" "),n("p",[t._v("我们这里也可以借助这样的处理思路，先按照 "),n("code",[t._v("最后一位")]),t._v(" 来排序手机号码，然后，再按照 "),n("code",[t._v("倒数第二位")]),t._v(" 重新排序，以此类推，最后按照第一位重新排序。经过 11 次排序之后，手机号码就都有序了。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(441),alt:"radix-sort"}})]),t._v(" "),n("p",[t._v("根据每一位来排序，我们可以用刚讲过的 "),n("code",[t._v("桶排序")]),t._v(" 或者 "),n("code",[t._v("计数排序")]),t._v(" ，它们的 "),n("code",[t._v("时间复杂度")]),t._v(" 可以做到 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("p",[t._v("如果要排序的数据有 "),n("code",[t._v("k")]),t._v(" 位，那我们就需要 "),n("code",[t._v("k")]),t._v(" 次 "),n("code",[t._v("桶排序")]),t._v(" 或者 "),n("code",[t._v("计数排序")]),t._v(" ， "),n("code",[t._v("总时间复杂度")]),t._v(" 是 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"k"}})],1),n("mjx-mo",{staticClass:"mjx-n",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"2217"}})],1),n("mjx-mi",{staticClass:"mjx-i",attrs:{space:"3"}},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 。")],1),t._v(" "),n("p",[t._v("当 "),n("code",[t._v("k")]),t._v(" 不大的时候，比如手机号码排序的例子， "),n("code",[t._v("k")]),t._v(" 最大就是 "),n("code",[t._v("11")]),t._v(" ，所以 "),n("code",[t._v("基数排序")]),t._v(" 的 "),n("code",[t._v("时间复杂度")]),t._v(" 就近似于 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 。")],1),t._v(" "),n("p",[n("code",[t._v("基数排序")]),t._v(" 对要排序的 "),n("code",[t._v("数据")]),t._v(" 是有要求的，需要可以分割出 "),n("code",[t._v("独立的位")]),t._v(" 来比较，而且位之间有 "),n("code",[t._v("递进")]),t._v(" 的关系，如果 "),n("code",[t._v("a")]),t._v(" 数据的高位比 "),n("code",[t._v("b")]),t._v(" 数据大，那剩下的低位就不用比较了。")]),t._v(" "),n("p",[t._v("除此之外，每一位的数据范围不能太大，要可以用 "),n("code",[t._v("线性排序算法")]),t._v(" 来排序，否则， "),n("code",[t._v("基数排序")]),t._v(" 的 "),n("code",[t._v("时间复杂度")]),t._v(" 就无法做到 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 了。")],1),t._v(" "),n("h3",{attrs:{id:"快速排序优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#快速排序优化"}},[t._v("#")]),t._v(" 快速排序优化")]),t._v(" "),n("p",[n("img",{attrs:{src:a(442),alt:"summary"}})]),t._v(" "),n("p",[t._v("我们先来看下，为什么最坏情况下 "),n("code",[t._v("快速排序")]),t._v(" 的 "),n("code",[t._v("时间复杂度")]),t._v(" 是 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" 呢？")],1),t._v(" "),n("p",[t._v("我们前面讲过，如果数据原来就是 "),n("code",[t._v("有序")]),t._v(" 的或者 "),n("code",[t._v("接近有序")]),t._v(" 的，每次 "),n("code",[t._v("分区点")]),t._v(" 都选择最后一个数据，那 "),n("code",[t._v("快速排序")]),t._v(" 算法就会变得非常糟糕， "),n("code",[t._v("时间复杂度")]),t._v(" 就会退化为 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v("。")],1),t._v(" "),n("p",[t._v("实际上，这种 "),n("mjx-container",{staticClass:"MathJax",attrs:{jax:"CHTML"}},[n("mjx-math",{staticClass:" MJX-TEX"},[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"O"}})],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:"("}})],1),n("mjx-msup",[n("mjx-mi",{staticClass:"mjx-i"},[n("mjx-c",{attrs:{c:"n"}})],1),n("mjx-script",{staticStyle:{"vertical-align":"0.363em"}},[n("mjx-mn",{staticClass:"mjx-n",attrs:{size:"s"}},[n("mjx-c",{attrs:{c:"2"}})],1)],1)],1),n("mjx-mo",{staticClass:"mjx-n"},[n("mjx-c",{attrs:{c:")"}})],1)],1)],1),t._v(" "),n("code",[t._v("时间复杂度")]),t._v(" 出现的主要原因还是因为我们 "),n("code",[t._v("分区点")]),t._v(" 选的不够合理。")],1),t._v(" "),n("p",[t._v("这里介绍两个比较常用、比较简单的分区算法:")]),t._v(" "),n("h4",{attrs:{id:"_1、三数取中法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、三数取中法"}},[t._v("#")]),t._v(" 1、三数取中法")]),t._v(" "),n("p",[t._v("我们从区间的首、尾、中间，分别取出一个数，然后对比大小，取这 "),n("code",[t._v("3")]),t._v(" 个数的中间值作为 "),n("code",[t._v("分区点")]),t._v(" 。")]),t._v(" "),n("h4",{attrs:{id:"_2、随机法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、随机法"}},[t._v("#")]),t._v(" 2、随机法")]),t._v(" "),n("p",[t._v("每次从要排序的区间中， "),n("code",[t._v("随机选择")]),t._v(" 一个元素作为 "),n("code",[t._v("分区点")]),t._v(" 。")])])}),[],!1,null,null,null);s.default=r.exports}}]);