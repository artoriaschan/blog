(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{457:function(t,r,v){t.exports=v.p+"assets/img/singlethreading-multithreading.3380f0a1.png"},458:function(t,r,v){t.exports=v.p+"assets/img/early-multithreading.cdc9215e.png"},459:function(t,r,v){t.exports=v.p+"assets/img/current-multithreading.b61cab52.png"},460:function(t,r,v){t.exports=v.p+"assets/img/furture-soa.329658fe.png"},461:function(t,r,v){t.exports=v.p+"assets/img/furture-soa-flexible.a9ba86d7.png"},604:function(t,r,v){"use strict";v.r(r);var _=v(22),s=Object(_.a)({},(function(){var t=this,r=t.$createElement,_=t._self._c||r;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"进程和线程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#进程和线程"}},[t._v("#")]),t._v(" 进程和线程")]),t._v(" "),_("p",[t._v("多线程可以并行处理任务，但是"),_("strong",[t._v("线程是不能单独存在的，它是由进程来启动和管理的")]),t._v("。那什么又是进程呢？")]),t._v(" "),_("p",[_("strong",[t._v("一个进程就是一个程序的运行实例")]),t._v("。详细解释就是，启动一个程序的时候，操作系统会为该程序创建一块内存，用来存放代码、运行中的数据和一个执行任务的主线程，我们把这样的一个运行环境叫"),_("strong",[t._v("进程")]),t._v("。")]),t._v(" "),_("p",[_("strong",[t._v("线程是依附于进程的，而进程中使用多线程并行处理能提升运算效率")])]),t._v(" "),_("p",[_("img",{attrs:{src:v(457),alt:"singlethreading-multithreading"}})]),t._v(" "),_("p",[t._v("总结来说，进程和线程之间的关系有以下 4 个特点。")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("1. 进程中的任意一线程执行出错，都会导致整个进程的崩溃。")])]),t._v(" "),_("li",[_("strong",[t._v("2. 线程之间共享进程中的数据。")])]),t._v(" "),_("li",[_("strong",[t._v("3. 当一个进程关闭之后，操作系统会回收进程所占用的内存。")])]),t._v(" "),_("li",[_("strong",[t._v("4. 进程之间的内容相互隔离。")])])]),t._v(" "),_("h2",{attrs:{id:"单进程浏览器时代"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单进程浏览器时代"}},[t._v("#")]),t._v(" 单进程浏览器时代")]),t._v(" "),_("p",[_("strong",[t._v("单进程浏览器是指浏览器的所有功能模块都是运行在同一个进程里")]),t._v("，这些模块包含了网络、插件、JavaScript 运行环境、渲染引擎和页面等。")]),t._v(" "),_("p",[t._v("单进程浏览器存在一些问题:")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("不稳定")]),t._v(": 其中一个模块崩溃都会导致整个浏览器的崩溃")]),t._v(" "),_("li",[_("strong",[t._v("不流畅")]),t._v(": 所有页面的渲染模块, js执行模块及插件都运行在同一线程内, 意味着同一时刻只有一个模块可以运行; 页面的内存泄漏问题也会导致单进程变慢的问题")]),t._v(" "),_("li",[_("strong",[t._v("不安全")]),t._v(": 通过插件可以获取到操作系统的任意资源, 页面脚本也可以通过浏览器的漏洞来获取系统权限")])]),t._v(" "),_("h2",{attrs:{id:"多进程浏览器时代"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#多进程浏览器时代"}},[t._v("#")]),t._v(" 多进程浏览器时代")]),t._v(" "),_("h3",{attrs:{id:"早期多进程架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#早期多进程架构"}},[t._v("#")]),t._v(" 早期多进程架构")]),t._v(" "),_("p",[_("img",{attrs:{src:v(458),alt:"early-multithreading"}})]),t._v(" "),_("p",[t._v("这个架构解决了单进程了浏览器架构的问题:")]),t._v(" "),_("ul",[_("li",[t._v("通过进程隔离来解决不稳定的问题。")]),t._v(" "),_("li",[t._v("通过设置页面单独的渲染进程来解决不流畅的问题。")]),t._v(" "),_("li",[t._v("通过设置安全沙箱来解决不安全的问题。")])]),t._v(" "),_("h3",{attrs:{id:"目前多进程架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#目前多进程架构"}},[t._v("#")]),t._v(" 目前多进程架构")]),t._v(" "),_("p",[_("img",{attrs:{src:v(459),alt:"current-multithreading"}})]),t._v(" "),_("p",[t._v("最新的 Chrome 浏览器包括：1 个浏览器（Browser）主进程、1 个 GPU 进程、1 个网络（NetWork）进程、多个渲染进程和多个插件进程。")]),t._v(" "),_("p",[t._v("每个进程负责的功能如下:")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("浏览器进程")]),t._v("。主要负责界面显示、用户交互、子进程管理，同时提供存储等功能。")])]),t._v(" "),_("ul",[_("li",[_("p",[_("strong",[t._v("渲染进程")]),t._v("。核心任务是将 HTML、CSS 和 JavaScript 转换为用户可以与之交互的网页，"),_("strong",[t._v("排版引擎 Blink 和 JavaScript 引擎 V8 都是运行在该进程中")]),t._v("，默认情况下，Chrome 会为每个 Tab 标签创建一个渲染进程。出于安全考虑，渲染进程都是运行在沙箱模式下。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("GPU 进程")]),t._v("。实现3D CSS效果, 绘制UI界面")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("网络进程")]),t._v("。主要负责页面的网络资源加载，之前是作为一个模块运行在浏览器进程里面的，直至最近才独立出来，成为一个单独的进程。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("插件进程")]),t._v("。主要是负责插件的运行，因插件易崩溃，所以需要通过插件进程来隔离，以保证插件进程崩溃不会对浏览器和页面造成影响。")])])]),t._v(" "),_("p",[t._v("多进程架构在提升了浏览器的稳定性,流畅性和安全性的同时, 不可避免的带来些新的问题:")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("更高的资源占用")]),t._v("。")]),t._v(" "),_("li",[_("strong",[t._v("更复杂的体系架构")]),t._v("。")])]),t._v(" "),_("h3",{attrs:{id:"未来面向服务的架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#未来面向服务的架构"}},[t._v("#")]),t._v(" 未来面向服务的架构")]),t._v(" "),_("p",[t._v("在 2016 年，Chrome 官方团队使用“"),_("strong",[t._v("面向服务的架构")]),t._v("”（Services Oriented Architecture，简称"),_("strong",[t._v("SOA")]),t._v("）的思想设计了新的 Chrome 架构。原来的各种模块会被重构成独立的服务（Service），每个服务（Service）都可以在独立的进程中运行，访问服务（Service）必须使用定义好的接口，通过 IPC 来通信，从而"),_("strong",[t._v("构建一个更内聚、松耦合、易于维护和扩展的系统")]),t._v("。")]),t._v(" "),_("p",[_("img",{attrs:{src:v(460),alt:"furture-soa"}})]),t._v(" "),_("p",[t._v("同时 Chrome 还提供灵活的"),_("strong",[t._v("弹性架构")]),t._v("，在强大性能设备上会以多进程的方式运行基础服务，但是如果在资源受限的设备上（如下图），Chrome 会将很多服务整合到一个进程中，从而节省内存占用。")]),t._v(" "),_("p",[_("img",{attrs:{src:v(461),alt:"furture-soa-flexible"}})])])}),[],!1,null,null,null);r.default=s.exports}}]);